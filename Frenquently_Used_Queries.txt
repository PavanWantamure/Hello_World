sudo -u fb_ofsaa cat /u01/app/ofsaa8/ficdb/log/t2t/<Logname>

#fichome   - navigates to /u01/app/ofsa8
#ficdbhome - navigates to /u01/app/ofsaa8/ficdb
#ficapphome- navigates to /u01/app/ofsaa8/ficapp
#ficwebhome- navigates to /u01/app/ofsaa8/ficweb
#ficserverhome- navigates to /u01/app/ofsaa8/ficapp/common/FICServer
#ficagenthome - navigates to /u01/app/ofsaa8/ficdb
#domainhome - navigates to /u01/app//weblogic/ofsaa_domain
#ficapplogs - navigates to /u01/app/ofsaa8/ficapp/common/FICServer/logs
#ficweblogs - navigates to /u01/app//weblogic/ofsaa_domain/applications/ofsaa8.ear/ofsaa8.war/logs
#ficdblogs  - navigates to /u01/app/ofsaa8/ficdb/log
#ftpshare - navigates to /u01/app/ofsaa8/ftpshare
#nodemanager - navigates to /u01/app//weblogic/server/bin


declare

d varchar2(100) ;

begin

d :=  FN_GATHER_STATS ('INGATOMIC_B_DQG_ALL_S_CASA_20180331_3',
                       '20180331',
                       'DQ_RESULT_DETL_MASTER',
                       'OFSAA_COM'
                      ) ;
end ;                                              

/




SELECT * FROM REV_LOAD_RUN_MASTER
WHERE LOAD_RUN_ID IN (
SELECT LOAD_RUN_ID FROM REV_LOAD_RUN_DETAILS 
WHERE MIS_DATE ='31-03-2018'
AND STAGE_TABLE_NAME ='STG_CORRESPONDENT_ACCOUNT'
                      )
AND LOAD_RUN_STATUS ='COMPLETED'
;


SELECT 
      STAGE.FIC_MIS_DATE,
      STAGE.V_FILE_SET_CD,
      STAGE.V_DATA_ORIGIN,
      NVL(STAGE.V_ORIG_LOCAL_PROD_CODE,-1) AS ORIGINAL_PRODUCT_CODE,
      NVL(STAGE.V_LOCAL_PROD_CODE,-1) AS LOCAL_PRODUCT_CODE,
      NVL(STAGE.V_PROD_CODE,-1) AS PROD_CODE,
      nvl(stage.v_lowest_booking_op_unit_Cd,-1) v_lowest_booking_op_unit_Cd,
      NVL(STAGE.V_BOOK_CODE,-1) AS BOOK_CODE ,
      NVL(STAGE.V_CCY_CODE,-1) AS CURRENCY_CODE,
      NVL(DLC.V_LOCAL_PROD_CODE,-1) AS CHECK_IF_LOCAL_PRODUCT_EXISTS,
      NVL(DDO.V_DATA_SOURCE_CODE,-1) AS CHECK_UU_CODE_FOR_DATA_ORIGIN ,
      NVL(DP.V_PROD_CODE,-1) AS CHECK_PRODUCT_CODE_EXISTS ,
      NVL(DC.V_ISO_CURRENCY_CD,-1) AS CHECK_FOR_CURRENCY,
      NVL(MAP_PC.V_CAPTURE_ID,-1) AS CHECK_MAP_PC ,
      NVL(STAGE.V_BUSINESS_UNIT_CODE,-1) AS CHECK_BUSINESS_UNIT,      
      COUNT(1) " NO OF ROWS "
FROM STG_CORRESPONDENT_ACCOUNT STAGE 
    LEFT OUTER JOIN DIM_LOCAL_PRODUCT DLC ON STAGE.V_LOCAL_PROD_CODE=DLC.V_LOCAL_PROD_CODE AND STAGE.FIC_MIS_DATE BETWEEN DLC.D_RECORD_START_DATE AND DLC.D_RECORD_END_DATE
    LEFT OUTER JOIN DIM_DATA_ORIGIN DDO   ON STAGE.V_DATA_ORIGIN=DDO.V_DATA_SOURCE_CODE AND DDO.V_UU_CODE IS NOT NULL AND STAGE.FIC_MIS_DATE BETWEEN DDO.D_RECORD_START_DATE AND DDO.D_RECORD_END_DATE
    LEFT OUTER JOIN MAP_CAPTUREID_PROFIT_CENTER MAP_PC ON STAGE.V_BOOK_CODE=MAP_PC.V_CAPTURE_ID AND STAGE.FIC_MIS_DATE BETWEEN MAP_PC.D_START_DATE AND MAP_PC.D_END_DATE
    LEFT OUTER JOIN DIM_CURRENCY DC ON STAGE.V_CCY_CODE=DC.V_ISO_CURRENCY_CD AND DC.F_LATEST_RECORD_INDICATOR='Y'
    LEFT OUTER JOIN DIM_PRODUCT DP ON STAGE.V_PROD_CODE=DP.V_PROD_CODE AND STAGE.FIC_MIS_DATE BETWEEN DP.D_RECORD_START_DATE AND DP.D_RECORD_END_DATE
    LEFT OUTER JOIN DIM_BUSINESS_UNIT DBU ON STAGE.V_BUSINESS_UNIT_CODE=DBU.V_BUSINESS_UNIT_CODE AND STAGE.FIC_MIS_DATE BETWEEN DBU.D_RECORD_START_DATE AND DBU.D_RECORD_END_DATE
----
    INNER JOIN REV_LOAD_RUN_MASTER  LRM ON STAGE.FIC_MIS_DATE=LRM.MIS_DATE AND STAGE.N_LOAD_RUN_ID = LRM.LOAD_RUN_ID
    INNER JOIN REV_LOAD_RUN_DETAILS LRD ON LRM.MIS_DATE=LRD.MIS_DATE AND LRD.LOAD_RUN_ID = LRM.LOAD_RUN_ID
    LEFT OUTER JOIN ING_STG_CORRECTION_HIST INV ON 
    INV.V_PK_COL_1                = STAGE.V_ACCOUNT_NUMBER
    AND INV.V_PK_COL_2            = STAGE.V_GAAP_CODE
    AND INV.V_PK_COL_3            = TO_CHAR(STAGE.FIC_MIS_DATE,'YYYYMMDD')
    AND INV.V_PK_COL_4            = TO_CHAR(STAGE.N_LOAD_RUN_ID)
    AND UPPER(INV.V_TABLE_NAME)   = UPPER('STG_CORRESPONDENT_ACCOUNT')

----    
WHERE 1=1
/* CONDITIONS TO SELECT THE DATA SET */
AND STAGE.FIC_MIS_DATE ='31-MAR-2018' 
AND STAGE.N_LOAD_RUN_ID IN (51)
/* CONDITIONS TO FILTER THE ROWS*/
AND 
(
  STAGE.V_PROD_CODE IS NULL OR STAGE.V_PROD_CODE ='MSG' OR STAGE.V_PROD_CODE='OTH' OR
  DP.V_PROD_CODE IS NULL  OR DP.V_PROD_CODE ='MSG' OR DP.V_PROD_CODE='OTH' OR
  DDO.V_DATA_SOURCE_CODE IS NULL OR DDO.V_DATA_SOURCE_CODE ='MSG' OR DDO.V_DATA_SOURCE_CODE='OTH' OR
  STAGE.V_BOOK_CODE IS NULL OR STAGE.V_BOOK_CODE ='MSG' OR STAGE.V_BOOK_CODE='OTH' OR
  MAP_PC.V_CAPTURE_ID IS NULL OR MAP_PC.V_CAPTURE_ID ='MSG' OR MAP_PC.V_CAPTURE_ID='OTH' OR
  DC.V_ISO_CURRENCY_CD  IS NULL OR DC.V_ISO_CURRENCY_CD  ='MSG' OR DC.V_ISO_CURRENCY_CD ='OTH' OR
  DLC.V_LOCAL_PROD_CODE  IS NULL OR DLC.V_LOCAL_PROD_CODE  ='MSG' OR DLC.V_LOCAL_PROD_CODE ='OTH'  OR
  STAGE.V_LOCAL_PROD_CODE IS NULL OR STAGE.V_LOCAL_PROD_CODE ='MSG' OR STAGE.V_LOCAL_PROD_CODE='OTH' OR
  STAGE.V_BUSINESS_UNIT_CODE IS NULL OR STAGE.V_BUSINESS_UNIT_CODE ='MSG' OR STAGE.V_BUSINESS_UNIT_CODE='OTH'

)
-- FILTER FOR LOAD RUN ID 

AND UPPER(LRD.STAGE_TABLE_NAME) = UPPER('STG_CORRESPONDENT_ACCOUNT')
AND LRM.LOAD_RUN_STATUS  = 'COMPLETED'
AND INV.V_TABLE_NAME IS NULL
--------------------------------------
GROUP BY 
      STAGE.FIC_MIS_DATE,
      STAGE.V_FILE_SET_CD,
      STAGE.V_DATA_ORIGIN,
      NVL(STAGE.V_LOCAL_PROD_CODE,-1) ,
      NVL(STAGE.V_PROD_CODE,-1) ,
      NVL(STAGE.V_BOOK_CODE,-1)  ,
      NVL(STAGE.V_CCY_CODE,-1) ,
      NVL(DLC.V_LOCAL_PROD_CODE,-1) ,
      NVL(DDO.V_DATA_SOURCE_CODE,-1) ,
      NVL(DC.V_ISO_CURRENCY_CD,-1) ,
      NVL(MAP_PC.V_CAPTURE_ID,-1) ,
      NVL(DP.V_PROD_CODE,-1),
      NVL(STAGE.V_BUSINESS_UNIT_CODE,-1),
      NVL(STAGE.V_ORIG_LOCAL_PROD_CODE,-1),
      nvl(stage.v_lowest_booking_op_unit_Cd,-1)
    
      ;



SELECT * FROM REV_LOAD_RUN_MASTER
WHERE LOAD_RUN_ID IN (
SELECT LOAD_RUN_ID FROM REV_LOAD_RUN_DETAILS 
WHERE MIS_DATE ='31-03-2018'
AND STAGE_TABLE_NAME ='STG_CORRESPONDENT_ACCOUNT'
                      )
AND LOAD_RUN_STATUS ='COMPLETED';




/* Create Partition */

Declare 
D Varchar2(30);
BEGINÂ 
D := FN_STG_PARTITION_MGT('TEST','20171231','STG_FORWARD_EXCHG_RATES','OFSAA_COM','4') ;
END; 

/


/* Check Count of Stage , Result , DDS */
ALTER SESSION SET CURRENT_sCHEMA = OFSAA_COM ;




WITH GET_THE_DATE AS (
  SELECT '&MIS_DATE' AS MIS_DATE FROM DUAL  --2
                     ) ,                     
STAGE_AREA AS (                                                
       SELECT  FIC_MIS_DATE AS MIS_DATE,         
       N_LOAD_RUN_ID AS LOAD_RUN_ID,         
       COUNT(1) AS STAGE_AREA_COUNT                                
       FROM STG_CASA STAGE LEFT OUTER JOIN GET_THE_DATE ON 1=1
       WHERE STAGE.FIC_MIS_DATE=TO_DATE(GET_THE_DATE.MIS_DATE,'DD-MM-YYYY')
       GROUP BY FIC_MIS_DATE ,N_LOAD_RUN_ID                                                                
       ),     
     RESULT_AREA AS (
       SELECT TO_DATE(MIS_DATE,'YYYYMMDD')  AS MIS_DATE,
              N_LOAD_RUN_ID AS LOAD_RUN_ID ,
              RESULT_AREA_COUNT
       FROM (       
        SELECT N_MIS_DATE_SKEY AS MIS_DATE,
               N_LOAD_RUN_ID ,
               COUNT(1) AS RESULT_AREA_COUNT
  FROM FCT_COMMON_ACCOUNT_SUMMARY FCAS 
  LEFT OUTER JOIN GET_THE_DATE ON 1=1 
  WHERE FCAS.N_MIS_DATE_SKEY = TO_NUMBER(TO_CHAR(TO_DATE(GET_THE_DATE.MIS_DATE,'DD-MM-YYYY'),'YYYYMMDD'))
  GROUP BY N_MIS_DATE_SKEY ,N_LOAD_RUN_ID 
             ) ) ,         
     DDS_AREA AS (
     SELECT TO_DATE(MIS_DATE,'YYYYMMDD') AS MIS_DATE,
              N_LOAD_RUN_ID AS LOAD_RUN_ID ,
              DDS_AREA_COUNT 
       FROM (       
        SELECT N_MIS_DATE_SKEY AS MIS_DATE,
               N_LOAD_RUN_ID,
               COUNT(1) AS DDS_AREA_COUNT
  FROM DDS_CONTRACT_DETAILS DDS 
  LEFT OUTER JOIN GET_THE_DATE ON 1=1 
  WHERE DDS.N_MIS_DATE_SKEY = TO_NUMBER(TO_CHAR(TO_DATE(GET_THE_DATE.MIS_DATE,'DD-MM-YYYY'),'YYYYMMDD'))
  GROUP BY N_MIS_DATE_SKEY ,N_LOAD_RUN_ID 
             ) )
SELECT  /*+parallel(8)*/ STAGE_AREA.STAGE_AREA_COUNT,
        RESULT_AREA.RESULT_AREA_COUNT,
        DDS_AREA.DDS_AREA_COUNT
 FROM REV_LOAD_RUN_MASTER RUN_MASTER INNER JOIN REV_LOAD_RUN_DETAILS RUN_DETAILS 
                                     ON RUN_MASTER.LOAD_RUN_ID=RUN_DETAILS.LOAD_RUN_ID AND RUN_MASTER.MIS_DATE=RUN_DETAILS.MIS_DATE
                                     INNER JOIN GET_THE_DATE ON 1=1
                                     LEFT OUTER JOIN STAGE_AREA ON STAGE_AREA.MIS_DATE =RUN_MASTER.MIS_DATE AND STAGE_AREA.LOAD_RUN_ID=RUN_MASTER.LOAD_RUN_ID
                                     LEFT OUTER JOIN RESULT_AREA ON RESULT_AREA.MIS_DATE =RUN_MASTER.MIS_DATE AND RESULT_AREA.LOAD_RUN_ID=RUN_MASTER.LOAD_RUN_ID
                                     LEFT OUTER JOIN DDS_AREA ON DDS_AREA.MIS_DATE =RUN_MASTER.MIS_DATE AND DDS_AREA.LOAD_RUN_ID=RUN_MASTER.LOAD_RUN_ID
WHERE 1=1
AND RUN_MASTER.MIS_DATE =  TO_DATE(GET_THE_DATE.MIS_DATE,'DD-MM-YYYY') 
AND RUN_MASTER.LOAD_RUN_STATUS = 'COMPLETED'
;
 


SELECT SG.FIC_MIS_DATE,SG.V_DATA_ORIGIN,DDO.V_DATA_SOURCE_DESC
FROM STG_GUARANTEES SG LEFT OUTER JOIN DIM_DATA_ORIGIN DDO ON SG.V_DATA_ORIGIN=DDO.V_DATA_SOURCE_CODE
WHERE SG.FIC_MIS_DATE IN ('31-07-2017','31-12-2017','31-03-2018')
GROUP BY SG.FIC_MIS_DATE,SG.V_DATA_ORIGIN,DDO.V_DATA_SOURCE_DESC  ;





/***** UDP's of Table Columns ******/

SELECT TABLE_NAME,COLUMN_NAME,RCM.COLUMN_PROPERTY,RCM.UDP_DEFAULT_VAL
FROM OFSAA_COM.REV_COLUMN_PROPERTIES RCP INNER JOIN OFSAA_COM.REV_COLUMN_PROPERTY_MLS RCM ON RCP.COLUMN_PROPERTY_CD=RCM.COLUMN_PROPERTY_CD
WHERE 1=1
AND TABLE_NAME='STG_FUTURES'
AND RCP.COLUMN_NAME LIKE '%PRICE%' 

;




/ *** PK 's of Tables ******/

select ATC.* 
from all_cons_columns ACC INNER JOIN ALL_TAB_COLUMNS ATC ON ACC.TABLE_NAME=ATC.TABLE_NAME AND ACC.COLUMN_NAME=ATC.COLUMN_NAME
where ACC.table_name in ('STG_CASA','STG_TD_CONTRACTS','STG_PARTY_MASTER')
and ACC.owner='OFSAA_COM'
AND ATC.OWNER='OFSAA_COM'
and ACC.constraint_name like 'PK%'

/




-- MATCHING STAGE MASTER TAB COLUMNS AND DIM TABLE COLUMNS
WITH S1 AS ( 
  SELECT TABLE_NAME T_NAME ,COLUMN_NAME C_NAME
  FROM ALL_TAB_COLUMNS
  WHERE 1=1
  AND OWNER='OFSAA_COM'
  AND TABLE_NAME LIKE 'STG_%_MASTER'
           )
SELECT S1.T_NAME STG_TABLE_NAME,S1.C_NAME STG_COLUMN_NAME,
       CASE WHEN SCD_MASTER.TBL_NM IS NULL THEN
           ATC.TABLE_NAME ELSE SCD_MASTER.TBL_NM
       END DIM_TABLE_NAME,
       CASE WHEN SCD_DETAILS.COL_NM IS NULL  THEN
            ATC.COLUMN_NAME ELSE SCD_DETAILS.COL_NM
        END DIM_COLUMN_NAME    
FROM S1 LEFT OUTER JOIN ALL_TAB_COLUMNS ATC ON ATC.TABLE_NAME='DIM_'||REGEXP_REPLACE(REGEXP_REPLACE(S1.T_NAME,'STG_'),'_MASTER')
                          AND S1.C_NAME=ATC.COLUMN_NAME 
        LEFT OUTER JOIN OFSAA_COM.SYS_TBL_MASTER SCD_MASTER ON S1.T_NAME=SCD_MASTER.STG_TBL_NM 
        LEFT OUTER JOIN OFSAA_COM.SYS_STG_JOIN_MASTER SCD_DETAILS ON SCD_MASTER.MAP_REF_NUM=SCD_DETAILS.MAP_REF_NUM AND S1.C_NAME=STG_COL_NM
                          
 
 ;



alter session set current_schema=ofsaa_com; 

SET SERVEROUTPUT on;

DECLARE D Varchar2(30);
Â BEGINÂ 
Â D := FN_STG_PARTITION_MGT('TEST','20180331','STG_FORWARD_EXCHG_RATES','OFSAA_COM','12');
END ;


SET SERVEROUTPUT ON ;

/*******************Code 1 Starts Here ************************/

DECLARE
TYPE T1 IS RECORD (  C1 VARCHAR2(3),  C2 VARCHAR2(3),  C3 VARCHAR2(100) ) ;
TYPE T2 IS TABLE OF T1 INDEX BY PLS_INTEGER   ; 
V1 T2;  
I INTEGER :=0  ;
Error_Count INTEGER := 0 ;
N1 NUMBER(22,10) ;

TYPE T3 IS TABLE OF OFSAA_COM.Stg_Forward_Exchg_Rates%ROWTYPE INDEX BY PLS_INTEGER ;

V3 T3;

TARGET_DATE DATE := TO_DATE('31-03-2018','DD-MM-YYYY') ;

BEGIN

SELECT FROM_CCY,TO_CCY,MAX(RATE) BULK COLLECT INTO V1 FROM (
SELECT SUBSTR(RAW_STR,1,3) FROM_CCY ,
       SUBSTR(RAW_STR,5,3) TO_CCY ,
       SUBSTR(RAW_STR,9,LENGTH(RAW_STR)-8) RATE 
FROM (

 SELECT 'MTL,EUR,0,4293' RAW_STR FROM DUAL UNION ALL 
 SELECT 'SIT,EUR,239,64' FROM DUAL UNION ALL 
 SELECT 'GBP,GBP,1' FROM DUAL UNION ALL 
 SELECT 'ATS,EUR,13,7603' FROM DUAL UNION ALL 
 SELECT 'BEF,EUR,40,3399' FROM DUAL UNION ALL 
 SELECT 'DEM,EUR,1,95583' FROM DUAL UNION ALL 
 SELECT 'ESP,EUR,166,386' FROM DUAL UNION ALL 
 SELECT 'EUR,EUR,1' FROM DUAL UNION ALL 
 SELECT 'PLN,JPY,0,032176185' FROM DUAL UNION ALL 
 SELECT 'PLN,IDR,0,000248163' FROM DUAL UNION ALL 
 SELECT 'PLN,HUF,0,013477498' FROM DUAL UNION ALL 
 SELECT 'PLN,GBP,4,802352375' FROM DUAL UNION ALL 
 SELECT 'PLN,CZK,0,165919685' FROM DUAL UNION ALL 
 SELECT 'QAR,EUR,4,488078649' FROM DUAL UNION ALL 
 SELECT 'QAR,BGN,2,294718172' FROM DUAL UNION ALL 
 SELECT 'QAR,TWD,0,125034341' FROM DUAL UNION ALL 
 SELECT 'QAR,KRW,0,003423601' FROM DUAL UNION ALL 
 SELECT 'QAR,SGD,2,779601496' FROM DUAL UNION ALL 
 SELECT 'QAR,JPY,0,034285983' FROM DUAL UNION ALL 
 SELECT 'QAR,IDR,0,000264435' FROM DUAL UNION ALL 
 SELECT 'QAR,HUF,0,01436122' FROM DUAL UNION ALL 
 SELECT 'QAR,GBP,5,117243447' FROM DUAL UNION ALL 
 SELECT 'QAR,CZK,0,176799068' FROM DUAL UNION ALL 
 SELECT 'SAR,EUR,4,622560764' FROM DUAL UNION ALL 
 SELECT 'SAR,BGN,2,363477786' FROM DUAL UNION ALL 
 SELECT 'SAR,TWD,0,128780907' FROM DUAL UNION ALL 
 SELECT 'NGN,USD,305,4' FROM DUAL UNION ALL 
 SELECT 'TMT,USD,3,495' FROM DUAL UNION ALL 
 SELECT 'DJF,USD,176,94' FROM DUAL UNION ALL 
 SELECT 'PGK,USD,3,25203252' FROM DUAL UNION ALL 
 SELECT 'CYP,EUR,0,585274' FROM DUAL 
    ) )
 GROUP BY FROM_CCY,TO_CCY
   

;

/* Check for the Format */

FOR I IN 1 .. V1.COUNT
 LOOP
    
    BEGIN 
    N1 := TO_NUMBER(V1(I).C3) ;
    
    EXCEPTION WHEN OTHERS THEN
       Error_Count :=  Error_Count +1 ;
       DBMS_OUTPUT.PUT_LINE(SQLERRM);
       DBMS_OUTPUT.PUT_LINE(' SEE THE CURRENCY PAIR - '||V1(I).C1||'-'||V1(I).C2||'-'||V1(I).C3 ) ;
    END ; 
    
  
    BEGIN
             
       V3(I).N_TENOR := 0;
       V3(I).V_FROM_CCY_CODE := V1(I).C1;
       V3(I).V_TO_CCY_CODE := V1(I).C2;
       V3(I).N_EXCHANGE_RATE := V1(I).C3;
       V3(I).FIC_MIS_DATE := TARGET_DATE ;
       V3(I).V_RATE_DATA_SOURCE_CD := 'GMDB';
       V3(I).N_SOURCE_CONTEXT_AWARENESS_ID := 12; 
       
   EXCEPTION WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE ('Error While Updating the 2nd PL/SQL Table ');
   END ;      
      
 END LOOP;

 
   /*4*/ 
    BEGIN
    
     FORALL I IN 1..V3.COUNT
        INSERT INTO OFSAA_COM.Stg_Forward_Exchg_Rates (N_TENOR,V_FROM_CCY_CODE,V_TO_CCY_CODE,N_EXCHANGE_RATE,FIC_MIS_DATE,V_RATE_DATA_SOURCE_CD,N_SOURCE_CONTEXT_AWARENESS_ID)
        VALUES
        (V3(I).N_TENOR,V3(I).V_FROM_CCY_CODE,V3(I).V_TO_CCY_CODE,V3(I).N_EXCHANGE_RATE,V3(I).FIC_MIS_DATE,V3(I).V_RATE_DATA_SOURCE_CD,V3(I).N_SOURCE_CONTEXT_AWARENESS_ID   )  ;
     
     DBMS_OUTPUT.PUT_LINE('INSERTED THE RECORDS IN TABLE - RECORD COUNT ='||SQL%ROWCOUNT) ;  
        
     COMMIT ;   
     
     EXCEPTION WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('ERROR WHILE INSERTING INTO OFSAA'||SQLERRM) ;
      
      ROLLBACK ;

   END;
   
    /*4*/    
    
 
 
IF Error_Count <> 0
 THEN 
   DBMS_OUTPUT.PUT_LINE('Didn''t Inserted Any Records , Fix The Errors First ! ');
ELSE 
  /* INSERT RECODS INTO TABLE */
  NULL;
END IF ;  

END;

/

UPDATE OFSAA_COM.Stg_Forward_Exchg_Rates
SET N_EXCHANGE_RATE=CASE WHEN ROUND(1/N_EXCHANGE_RATE,9) > 999999 THEN 999999 ELSE ROUND(1/N_EXCHANGE_RATE,9) END 
WHERE FIC_MIS_DATE='31-03-2018' ; 



*********************Code Ends Here **************************************************************


/**** Check Reference Data For DFP Columns **********************/


SET SERVEROUTPUT ON ;

DECLARE

TYPE R_REFERENCE_INFO IS RECORD  (
          V_STAGE_TABLE_NAME VARCHAR2(30),
          V_STAGE_COLUMN_NAME VARCHAR2(30),
          V_DIM_TABLE_NAME VARCHAR2(30),
          V_DIM_COLUMN_NAME VARCHAR2(30)
                                ) ;
                                
TYPE T_DOWNLOAD_FROM_RH IS TABLE OF R_REFERENCE_INFO INDEX BY PLS_INTEGER;

V_DOWNLOAD_FROM_RH T_DOWNLOAD_FROM_RH  ;

V_SQL VARCHAR2(32000) ;

TYPE R_RESULTS IS RECORD ( RESULTS VARCHAR2(32000)
                            ) ;                            
TYPE T_STORE_RECORDS  IS TABLE OF R_RESULTS;
V_RESULTS T_STORE_RECORDS ;

TYPE R_DISPLAY_RESULTS IS RECORD (COLUMN_1 VARCHAR2(32000)  );
TYPE T_DISPLAY_REULTS IS TABLE OF R_DISPLAY_RESULTS INDEX BY PLS_INTEGER ;
V_DISPLAY_RESULTS T_DISPLAY_REULTS ;
N_MAX_COUNT INTEGER := 0 ;

BEGIN

select T_NAME,C_NAME,T_NAME2,C_NAME2 BULK COLLECT INTO V_DOWNLOAD_FROM_RH from (
SELECT 'STG_CASA' T_NAME ,'V_PROD_CODE' C_NAME,'DIM_PRODUCT' T_NAME2,'V_PROD_CODE' C_NAME2 FROM DUAL UNION ALL
SELECT 'STG_CASA','V_DATA_ORIGIN','DIM_PRODUCT','V_PROD_CODE' FROM DUAL 
              ) ;
              

FOR J IN 1 .. 10000
 LOOP   
   V_DISPLAY_RESULTS(J).COLUMN_1 :=  ','  ; 
END LOOP ;              

FOR I IN 1..V_DOWNLOAD_FROM_RH.COUNT
 LOOP
 
  V_SQL := ' SELECT DISTINCT '||V_DOWNLOAD_FROM_RH(I).V_STAGE_COLUMN_NAME||' FROM '||V_DOWNLOAD_FROM_RH(I).V_STAGE_TABLE_NAME || ' WHERE '|| V_DOWNLOAD_FROM_RH(I).V_STAGE_COLUMN_NAME || 
           ' NOT IN ( SELECT '||V_DOWNLOAD_FROM_RH(I).V_DIM_COLUMN_NAME||' FROM '||V_DOWNLOAD_FROM_RH(I).V_DIM_TABLE_NAME|| ' ) ' ;
  
  EXECUTE IMMEDIATE V_SQL BULK COLLECT INTO V_RESULTS ;
  
-- STORE THE RESULTS IN COLLECTION  

IF N_MAX_COUNT <  V_RESULTS.COUNT THEN 
   N_MAX_COUNT := V_RESULTS.COUNT ;
END IF; 

V_DISPLAY_RESULTS(1).COLUMN_1 := V_DISPLAY_RESULTS(1).COLUMN_1 ||','||V_DOWNLOAD_FROM_RH(I).V_STAGE_COLUMN_NAME ;

FOR J IN 2 .. V_RESULTS.COUNT+1
 LOOP
   
   V_DISPLAY_RESULTS(J).COLUMN_1 :=  V_DISPLAY_RESULTS(J).COLUMN_1 ||','|| NVL(V_RESULTS(J-1).RESULTS,',') ; 
   
 END LOOP ;

-- END OF STORING RESULTS 
 
 
-- PROCEES TO NEXT COLUMN 

END LOOP ;


FOR K IN 1 ..10
LOOP
dbms_output.put_line ( V_DISPLAY_RESULTS(K).COLUMN_1) ;
END LOOP ;

END ;


/***********************************************************************************/




Insert into Fact Account Cash Flows 



ALTER SESSION ENABLE PARALLEL DML ;

INSERT /*+PARALLEL(4) */ INTO FCT_ACCOUNT_CASH_FLOWS
(
N_AS_OF_DATE_SKEY,V_ISO_CURRENCY_CD
,N_ACCOUNT_ID,N_ACCT_DATA_IDENTITY_CD
,N_CASH_FLOW_SEQUENCE,N_CURRENCY_TYPE_CD
,N_SCENARIO_NO,V_AFFILIATE_CAPTURE_CODE
,V_AFFILIATE_CAPTURE_TYPE_CODE,V_BOOKING_OP_UNIT_TYPE_CD
,V_FINANCIAL_ELEMENT_CODE_ESP,V_LOWEST_BOOKING_OP_UNIT_CD
,V_ORIGINAL_ACCOUNT_NUMBER,N_RESULT_BUCKET_SKEY
,N_ENTITY_SKEY,N_ACCT_SKEY
,N_INFLOW_AMT
,N_OUTFLOW_AMT
,N_RUN_SKEY,N_BUSINESS_UNIT_SKEY
,N_CASH_FLOW_DATE_SKEY,N_DATA_SOURCE_CD
,N_INFLOW_AMOUNT_LCY
,N_OUTFLOW_AMOUNT_LCY
,N_RESPONSIBILITY_SKEY,N_SOURCE_TYPE_SKEY
,N_CASH_FLOW_TYPE_SKEY,N_PRODUCT_SKEY
) 
SELECT  
 DIM_DATES.N_DATE_SKEY AS N_DATE_SKEY,STG_ACCOUNT_CASH_FLOWS.V_CCY_CODE AS V_CCY_CODE
,STG_ACCOUNT_CASH_FLOWS.N_ACCOUNT_ID AS N_ACCOUNT_ID,STG_ACCOUNT_CASH_FLOWS.N_ACCT_DATA_IDENTITY_CD AS N_ACCT_DATA_IDENTITY_CD
,STG_ACCOUNT_CASH_FLOWS.N_CASH_FLOW_SEQUENCE AS N_CASH_FLOW_SEQUENCE,STG_ACCOUNT_CASH_FLOWS.N_CURRENCY_TYPE_CD AS N_CURRENCY_TYPE_CD
,STG_ACCOUNT_CASH_FLOWS.N_SCENARIO_NO AS N_SCENARIO_NO,STG_ACCOUNT_CASH_FLOWS.V_AFFILIATE_CAPTURE_CODE AS V_AFFILIATE_CAPTURE_CODE
,STG_ACCOUNT_CASH_FLOWS.V_AFFILIATE_CAPTURE_TYPE_CODE AS V_AFFILIATE_CAPTURE_TYPE_CODE,STG_ACCOUNT_CASH_FLOWS.V_BOOKING_OP_UNIT_TYPE_CD AS V_BOOKING_OP_UNIT_TYPE_CD
,STG_ACCOUNT_CASH_FLOWS.V_FINANCIAL_ELEMENT_CODE_ESP AS V_FINANCIAL_ELEMENT_CODE_ESP,STG_ACCOUNT_CASH_FLOWS.V_LOWEST_BOOKING_OP_UNIT_CD AS V_LOWEST_BOOKING_OP_UNIT_CD
,STG_ACCOUNT_CASH_FLOWS.V_ORIGINAL_ACCOUNT_NUMBER AS V_ORIGINAL_ACCOUNT_NUMBER,11141 AS N_RESULT_BUCKET_SKEY
,DIM_ORG_STRUCTURE.N_ENTITY_SKEY AS N_ENTITY_SKEY,DIM_ACCOUNT.N_ACCT_SKEY AS N_ACCT_SKEY
,SUM(CASE WHEN STG_ACCOUNT_CASH_FLOWS.V_CASH_FLOW_TYPE = 'IWRD_CASH_FLOW' THEN STG_ACCOUNT_CASH_FLOWS.N_CASH_FLOW_AMOUNT END)  AS N_INFLOW_AMT
,SUM(CASE WHEN STG_ACCOUNT_CASH_FLOWS.V_CASH_FLOW_TYPE = 'OUTW_CASH_FLOW' THEN STG_ACCOUNT_CASH_FLOWS.N_CASH_FLOW_AMOUNT END)  AS N_OUTFLOW_AMT
,-1 AS N_RUN_SKEY,COALESCE(Dim_Business_Unit.n_business_unit_skey,NVL2(Stg_Account_Cash_Flows.v_business_unit_code,-1,0)) AS N_BUSINESS_UNIT_SKEY,
TO_NUMBER(TO_CHAR(Stg_Account_Cash_Flows.d_cash_flow_date,'YYYYMMDD')) AS N_CASH_FLOW_DATE_SKEY,COALESCE(Dim_Data_Origin.n_data_source_cd,NVL2(Stg_Account_Cash_Flows.v_data_origin,-1,0)) AS N_DATA_SOURCE_CD
,SUM(CASE WHEN STG_ACCOUNT_CASH_FLOWS.V_CASH_FLOW_TYPE = 'IWRD_CASH_FLOW' THEN STG_ACCOUNT_CASH_FLOWS.N_CASH_FLOW_AMOUNT_LCY END) AS N_INFLOW_AMOUNT_LCY
,SUM(CASE WHEN STG_ACCOUNT_CASH_FLOWS.V_CASH_FLOW_TYPE = 'OUTW_CASH_FLOW' THEN STG_ACCOUNT_CASH_FLOWS.N_CASH_FLOW_AMOUNT_LCY END) AS N_OUTFLOW_AMOUNT_LCY
,COALESCE(Dim_Responsibility.n_responsibility_skey,NVL2(Stg_Account_Cash_Flows.v_responsibility_code,-1,0)) AS N_RESPONSIBILITY_SKEY,COALESCE(Dim_Source_Type.n_source_type_skey,NVL2(Stg_Account_Cash_Flows.v_source_type_code,-1,0)) AS N_SOURCE_TYPE_SKEY
,DIM_CASH_FLOW_TYPE.N_CASH_FLOW_TYPE_SKEY AS N_CASH_FLOW_TYPE_SKEY,DIM_PRODUCT.N_PROD_SKEY AS N_PROD_SKEY
FROM STG_ACCOUNT_CASH_FLOWS
  INNER JOIN DIM_DATES
  ON STG_ACCOUNT_CASH_FLOWS.FIC_MIS_DATE = DIM_DATES.D_CALENDAR_DATE
INNER JOIN DIM_ACCOUNT
  ON STG_ACCOUNT_CASH_FLOWS.V_ACCOUNT_NUMBER          = DIM_ACCOUNT.V_ACCOUNT_NUMBER
  AND NVL(DIM_ACCOUNT.F_LATEST_RECORD_INDICATOR, 'Y') = 'Y'
INNER JOIN DIM_CASH_FLOW_TYPE
  ON STG_ACCOUNT_CASH_FLOWS.V_FINANCIAL_ELEMENT_CODE = DIM_CASH_FLOW_TYPE.V_CASH_FLOW_TYPE_CODE
  AND DIM_CASH_FLOW_TYPE.F_LATEST_RECORD_INDICATOR   = 'Y'
LEFT OUTER JOIN DIM_PRODUCT
  ON NVL(STG_ACCOUNT_CASH_FLOWS.V_PROD_CODE,'MSG')     = DIM_PRODUCT.V_PROD_CODE
  AND DIM_PRODUCT.F_LATEST_RECORD_INDICATOR = 'Y'
LEFT OUTER JOIN DIM_ORG_STRUCTURE
  ON STG_ACCOUNT_CASH_FLOWS.V_LV_CODE             = DIM_ORG_STRUCTURE.V_ENTITY_CODE
  AND DIM_ORG_STRUCTURE.F_LATEST_RECORD_INDICATOR = 'Y'
LEFT OUTER JOIN DIM_DATA_ORIGIN
  ON STG_ACCOUNT_CASH_FLOWS.V_DATA_ORIGIN = DIM_DATA_ORIGIN.V_DATA_SOURCE_CODE
  AND STG_ACCOUNT_CASH_FLOWS.FIC_MIS_DATE BETWEEN DIM_DATA_ORIGIN.D_RECORD_START_DATE AND DIM_DATA_ORIGIN.D_RECORD_END_DATE
LEFT OUTER JOIN DIM_BUSINESS_UNIT
  ON STG_ACCOUNT_CASH_FLOWS.V_BUSINESS_UNIT_CODE = DIM_BUSINESS_UNIT.V_BUSINESS_UNIT_CODE
  AND STG_ACCOUNT_CASH_FLOWS.FIC_MIS_DATE BETWEEN DIM_BUSINESS_UNIT.D_RECORD_START_DATE AND DIM_BUSINESS_UNIT.D_RECORD_END_DATE
LEFT OUTER JOIN DIM_SOURCE_TYPE
  ON STG_ACCOUNT_CASH_FLOWS.V_SOURCE_TYPE_CODE = DIM_SOURCE_TYPE.V_SOURCE_TYPE_CODE
  AND STG_ACCOUNT_CASH_FLOWS.FIC_MIS_DATE BETWEEN DIM_SOURCE_TYPE.D_RECORD_START_DATE AND DIM_SOURCE_TYPE.D_RECORD_END_DATE
LEFT OUTER JOIN DIM_RESPONSIBILITY
  ON STG_ACCOUNT_CASH_FLOWS.V_RESPONSIBILITY_CODE = DIM_RESPONSIBILITY.V_RESPONSIBILITY_CODE
  AND STG_ACCOUNT_CASH_FLOWS.FIC_MIS_DATE BETWEEN DIM_RESPONSIBILITY.D_RECORD_START_DATE AND DIM_RESPONSIBILITY.D_RECORD_END_DATE
WHERE 1                                                           =1
  AND STG_ACCOUNT_CASH_FLOWS.FIC_MIS_DATE                           = to_date('20170731','YYYYMMDD')
  AND N_SOURCE_CONTEXT_AWARENESS_ID                                 IN (4,10,43,41)
GROUP BY 
 DIM_DATES.N_DATE_SKEY 
 , STG_ACCOUNT_CASH_FLOWS.V_CCY_CODE 
 , STG_ACCOUNT_CASH_FLOWS.N_ACCOUNT_ID 
 , STG_ACCOUNT_CASH_FLOWS.N_ACCT_DATA_IDENTITY_CD 
 , STG_ACCOUNT_CASH_FLOWS.N_CASH_FLOW_SEQUENCE 
 , STG_ACCOUNT_CASH_FLOWS.N_CURRENCY_TYPE_CD 
 , STG_ACCOUNT_CASH_FLOWS.N_SCENARIO_NO 
 , STG_ACCOUNT_CASH_FLOWS.V_AFFILIATE_CAPTURE_CODE 
 , STG_ACCOUNT_CASH_FLOWS.V_AFFILIATE_CAPTURE_TYPE_CODE 
 , STG_ACCOUNT_CASH_FLOWS.V_BOOKING_OP_UNIT_TYPE_CD 
,STG_ACCOUNT_CASH_FLOWS.V_FINANCIAL_ELEMENT_CODE_ESP 
,STG_ACCOUNT_CASH_FLOWS.V_LOWEST_BOOKING_OP_UNIT_CD 
,STG_ACCOUNT_CASH_FLOWS.V_ORIGINAL_ACCOUNT_NUMBER 
,11141 
,DIM_ORG_STRUCTURE.N_ENTITY_SKEY ,
DIM_ACCOUNT.N_ACCT_SKEY 
,-1 ,
COALESCE(Dim_Business_Unit.n_business_unit_skey,NVL2(Stg_Account_Cash_Flows.v_business_unit_code,-1,0)) ,
TO_NUMBER(TO_CHAR(Stg_Account_Cash_Flows.d_cash_flow_date,'YYYYMMDD')) ,
COALESCE(Dim_Data_Origin.n_data_source_cd,NVL2(Stg_Account_Cash_Flows.v_data_origin,-1,0)) 
, COALESCE(Dim_Responsibility.n_responsibility_skey,NVL2(Stg_Account_Cash_Flows.v_responsibility_code,-1,0)) 
, COALESCE(Dim_Source_Type.n_source_type_skey,NVL2(Stg_Account_Cash_Flows.v_source_type_code,-1,0)) 
,DIM_CASH_FLOW_TYPE.N_CASH_FLOW_TYPE_SKEY ,
DIM_PRODUCT.N_PROD_SKEY 
/

commit 

/


/** Check the Difference in Stage and Dimension Tables **/


SET SERVEROUTPUT ON ;

DECLARE 

TYPE COLUMN_TYPE IS TABLE OF SYS_STG_JOIN_MASTER.STG_COL_NM%TYPE   ;

V_DIM_COLUMNS COLUMN_TYPE ;
V_STG_COLUMNS COLUMN_TYPE ;
V_MAPPED_STG_COLUMNS  COLUMN_TYPE ;

RESULT_AREA COLUMN_TYPE ;

BEGIN


DBMS_OUTPUT.PUT_LINE ('STARTED AT 11:35 : ')      ;


FOR DFP_TABLES IN (
  SELECT DIM_TABLE_NAME,SYS_TBL_MASTER.STG_TBL_NM STAGE_TABLE_NAME ,SYS_TBL_MASTER.MAP_REF_NUM MAP_REF_NUM FROM (
SELECT 1 L1 , 'DIM_ACCNTNG_AMOUNT_TYPE' DIM_TABLE_NAME FROM DUAL UNION ALL 
SELECT 2 L1 , 'DIM_ACCT_STATUS' FROM DUAL UNION ALL 
SELECT 3 L1 , 'DIM_AMORTIZATION_TYPE' FROM DUAL UNION ALL 
SELECT 4 L1 , 'DIM_BASEL_CREDIT_RATING' FROM DUAL UNION ALL 
SELECT 5 L1 , 'DIM_BUSINESS_CENTER' FROM DUAL UNION ALL 
SELECT 6 L1 , 'DIM_BUSINESS_UNIT' FROM DUAL UNION ALL 
SELECT 7 L1 , 'DIM_CASH_FLOW_TYPE' FROM DUAL UNION ALL 
SELECT 8 L1 , 'DIM_CHANNEL' FROM DUAL UNION ALL 
SELECT 9 L1 , 'DIM_COMMON_COA_B' FROM DUAL UNION ALL 
SELECT 10 L1 , 'DIM_COUNTRY' FROM DUAL UNION ALL 
SELECT 11 L1 , 'DIM_CREDIT_LINE' FROM DUAL UNION ALL 
SELECT 12 L1 , 'DIM_CREDIT_RATING' FROM DUAL UNION ALL 
SELECT 13 L1 , 'DIM_CREDIT_RATING' FROM DUAL UNION ALL 
SELECT 14 L1 , 'DIM_CREDIT_STATUS' FROM DUAL UNION ALL 
SELECT 15 L1 , 'DIM_CURRENCY' FROM DUAL UNION ALL 
SELECT 16 L1 , 'DIM_DATA_ORIGIN' FROM DUAL UNION ALL 
SELECT 17 L1 , 'DIM_DATA_ORIGIN' FROM DUAL UNION ALL 
SELECT 18 L1 , 'DIM_DAY_COUNT_IND' FROM DUAL UNION ALL 
SELECT 19 L1 , 'DIM_DEPOSIT_PRIM_PURPOSE' FROM DUAL UNION ALL 
SELECT 20 L1 , 'DIM_GAAP' FROM DUAL UNION ALL 
SELECT 21 L1 , 'DIM_GL_ACCOUNT' FROM DUAL UNION ALL 
SELECT 22 L1 , 'DIM_GL_BOOK' FROM DUAL UNION ALL 
SELECT 23 L1 , 'DIM_HOLIDAY_ROLLING_CONVENTION' FROM DUAL UNION ALL 
SELECT 24 L1 , 'DIM_INSTRUMENT_CONTRACT' FROM DUAL UNION ALL 
SELECT 25 L1 , 'DIM_INTEREST_TIMING_TYPE' FROM DUAL UNION ALL 
SELECT 26 L1 , 'DIM_INTEREST_TYPE' FROM DUAL UNION ALL 
SELECT 27 L1 , 'DIM_IRC' FROM DUAL UNION ALL 
SELECT 28 L1 , 'DIM_ISSUER_TYPE' FROM DUAL UNION ALL 
SELECT 29 L1 , 'DIM_LEGACY_ACCT_AMT_TYP' FROM DUAL UNION ALL 
SELECT 30 L1 , 'DIM_LEGACY_ACCT_AMT_TYP' FROM DUAL UNION ALL 
SELECT 31 L1 , 'DIM_LEGACY_PRODUCT_TYPE' FROM DUAL UNION ALL 
SELECT 32 L1 , 'DIM_LOCAL_PRODUCT' FROM DUAL UNION ALL 
SELECT 33 L1 , 'DIM_MITIGANT' FROM DUAL UNION ALL 
SELECT 34 L1 , 'DIM_ORG_STRUCTURE' FROM DUAL UNION ALL 
SELECT 35 L1 , 'DIM_ORG_UNIT' FROM DUAL UNION ALL 
SELECT 36 L1 , 'DIM_PARTY' FROM DUAL UNION ALL 
SELECT 37 L1 , 'DIM_PARTY_TYPE' FROM DUAL UNION ALL 
SELECT 38 L1 , 'DIM_PLACED_COLLATERAL' FROM DUAL UNION ALL 
SELECT 39 L1 , 'DIM_PRODUCT' FROM DUAL UNION ALL 
SELECT 40 L1 , 'DIM_PROFIT_CENTER' FROM DUAL UNION ALL 
SELECT 41 L1 , 'DIM_RESPONSIBILITY' FROM DUAL UNION ALL 
SELECT 42 L1 , 'DIM_RISK_WEIGHT' FROM DUAL UNION ALL 
SELECT 43 L1 , 'DIM_SOURCE_TYPE' FROM DUAL UNION ALL 
SELECT 44 L1 , 'DIM_STRUCTURE' FROM DUAL UNION ALL 
SELECT 45 L1 , 'DIM_TRADING_DESK' FROM DUAL UNION ALL 
SELECT 46 L1 , 'DIM_TXN_FAILURE_REASON' FROM DUAL ) DFP_TABLES LEFT OUTER JOIN OFSAA_COM.SYS_TBL_MASTER ON  SYS_TBL_MASTER.TBL_NM= DFP_TABLES.DIM_TABLE_NAME ORDER BY L1
      )

LOOP   

SELECT COLUMN_NAME BULK COLLECT INTO V_DIM_COLUMNS
FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = DFP_TABLES.DIM_TABLE_NAME ;

SELECT COLUMN_NAME BULK COLLECT INTO V_STG_COLUMNS
FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = NVL( DFP_TABLES.STAGE_TABLE_NAME,'A') ;

SELECT DETAILS.STG_COL_NM BULK COLLECT INTO V_MAPPED_STG_COLUMNS  
FROM SYS_TBL_MASTER MASTER_1 INNER JOIN SYS_STG_JOIN_MASTER DETAILS ON MASTER_1.MAP_REF_NUM=DETAILS.MAP_REF_NUM 
WHERE MASTER_1.MAP_REF_NUM = NVL(DFP_TABLES.MAP_REF_NUM,-1)
;

---REPORT HERE 

/* Columns to be Added in Dimension Table */

DBMS_OUTPUT.PUT_LINE ('------------------------------------------------------------------------------------------------------------------------------------------------------');
DBMS_OUTPUT.PUT_LINE ('------------------------------------------------------------------------------------------------------------------------------------------------------');
DBMS_OUTPUT.PUT_LINE ('BELOW OUTPUT COMBINATION IS FOR ');
DBMS_OUTPUT.PUT_LINE (CHR(10));
DBMS_OUTPUT.PUT_LINE ( DFP_TABLES.DIM_TABLE_NAME||'--'||DFP_TABLES.STAGE_TABLE_NAME||'--'||DFP_TABLES.MAP_REF_NUM ) ;

RESULT_AREA := V_STG_COLUMNS MULTISET EXCEPT ALL V_DIM_COLUMNS ;

IF RESULT_AREA.COUNT = 0 THEN 
 DBMS_OUTPUT.PUT_LINE('NO CHANGE REQUIRED FOR MAP REF NUM '||DFP_TABLES.MAP_REF_NUM) ;

ELSE 
DBMS_OUTPUT.PUT_LINE('BELOW COLUMNS ARE PRESENT IN STAGE MASTER AND NOT IN DIMESNION ') ;

BEGIN 

FOR INDX IN 1..RESULT_AREA.COUNT 
 LOOP   
   DBMS_OUTPUT.PUT_LINE(RESULT_AREA(INDX)||',');
   NULL; 
 END LOOP ;

EXCEPTION WHEN OTHERS THEN 
DBMS_OUTPUT.PUT_LINE('ERROR WHILE REPORTING '|| DFP_TABLES.DIM_TABLE_NAME||'--'||DFP_TABLES.STAGE_TABLE_NAME||'--'||DFP_TABLES.MAP_REF_NUM||' ERROR MESSAGE '||SQLERRM) ;
END ;

END IF ;


RESULT_AREA := V_STG_COLUMNS MULTISET EXCEPT ALL V_MAPPED_STG_COLUMNS ;

IF RESULT_AREA.COUNT = 0 THEN 
 DBMS_OUTPUT.PUT_LINE('NO CHANGE REQUIRED IN MAPPING FOR MAP REF NUM '||DFP_TABLES.MAP_REF_NUM) ;

ELSE 
DBMS_OUTPUT.PUT_LINE (CHR(10));
DBMS_OUTPUT.PUT_LINE('BELOW COLUMNS ARE PRESENT IN STAGE * MASTER AND ARE NOT MAPPED ') ;

BEGIN
FOR INDX IN 1..RESULT_AREA.COUNT 
 LOOP   
   DBMS_OUTPUT.PUT_LINE(RESULT_AREA(INDX)||',');
   NULL; 
END LOOP ;
EXCEPTION WHEN OTHERS THEN 
DBMS_OUTPUT.PUT_LINE('ERROR WHILE REPORTING '|| DFP_TABLES.DIM_TABLE_NAME||'--'||DFP_TABLES.STAGE_TABLE_NAME||'--'||DFP_TABLES.MAP_REF_NUM||' ERROR MESSAGE '||SQLERRM) ;
END ;

END IF ; 

END LOOP ;

EXCEPTION WHEN OTHERS THEN 
DBMS_OUTPUT.PUT_LINE('ERROR WHILE REPORTING : '||SQLERRM||' STOPPED AT MIDDLE ') ;


END ;
/






